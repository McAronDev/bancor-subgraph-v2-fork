// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  Address,
  DataSourceTemplate,
  DataSourceContext
} from "@graphprotocol/graph-ts";

export class LiquidityPoolV2Converter extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("LiquidityPoolV2Converter", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "LiquidityPoolV2Converter",
      [address.toHex()],
      context
    );
  }
}

export class LiquidityPoolV1Converter extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("LiquidityPoolV1Converter", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "LiquidityPoolV1Converter",
      [address.toHex()],
      context
    );
  }
}

export class Converter25 extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("Converter25", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "Converter25",
      [address.toHex()],
      context
    );
  }
}

export class Converter24 extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("Converter24", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "Converter24",
      [address.toHex()],
      context
    );
  }
}

export class Converter27 extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("Converter27", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "Converter27",
      [address.toHex()],
      context
    );
  }
}
